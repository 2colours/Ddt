#!/usr/bin/env perl6
use v6;
use Ddt::Distribution;
use META6;
use License::Software;

sub author { qx{git config --global user.name}.chomp }
sub email { qx{git config --global user.email}.chomp }
sub TOPDIR { qx{git rev-parse --show-toplevel}.chomp.IO }

#| Create new module
multi MAIN("new",
            $module is copy, #= Module::To::Create
            :$license-name = 'GPLv3' #= License name
        ) {
    my $distri-name = $module.subst: '::', '-', :g;
    my $main-dir = $distri-name.IO;
    die "Already exists $main-dir" if $main-dir.IO ~~ :d;

    mkdir($main-dir);
    my $license-holder = author() ~ " " ~ email();
    my $url = License::Software::get($license-name).new($license-holder).url;
    my $meta = META6.new:   name => $distri-name,
                            authors => [author()],
                            license => $url,
                            version => Version.new('*'),
                            perl-version => $*PERL.version;

    my $meta-file = $main-dir.IO.child(<META6.json>);
    $meta-file.spurt: $meta.to-json(:skip-null);
    my $ddt = Ddt::Distribution.new: $meta-file;
    $ddt.generate-all: :force;
    note "Successfully created $main-dir";
}

#| Build the module in current directory
multi MAIN("build") {
    my $ddt = Ddt::Distribution.new: TOPDIR;
    $ddt.generate-README;
    $ddt.generate-META6;
    return unless "Build.pm".IO.e;
    run "zef", "build", ".";
}

multi MAIN("test") {
    run "zef", "test", "."
}

#| Make release
multi MAIN("release") {
    my $ddt = Ddt::Distribution.new: TOPDIR;
    my ($user, $repo) = guess-user-and-repo($ddt.META6<source-url>);
    my Str:D $meta-file = $ddt.meta-file.basename;
    my Str:D $module = $ddt.name;
    die "Cannot find user and repository settting" unless $repo;
    say  qq:to/EOF/;
    Are you ready to release your module? Congrats!
    For this, follow these steps:

    1. Fork https://github.com/perl6/ecosystem repository.
    2. Add https://raw.githubusercontent.com/$user/$repo/master/$meta-file to META.list.
    3. And raise a pull request!


    Once your pull request is merged, we can install your module by:

    \$ zef install $module
    EOF
}

sub guess-user-and-repo(Str:D $url) {
    return if $url eq "";
    if $url ~~ m{ (git|https?) '://'
        [<-[/]>+] '/'
        $<user>=[<-[/]>+] '/'
        $<repo>=[.+?] [\.git]?
    $} {
        return $/<user>, $/<repo>;
    } else {
        return;
    }
}

